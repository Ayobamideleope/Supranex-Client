@import 'variables';
@import 'mixins/screen-reader';
@import 'mixins/breakpoints';
// @import 'mixins/grid-layout';
// @import 'mixins/background-variants';

@mixin abs-center {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

///@func bg-compose
// @param url e.g. url('images/image.png')
@function bg-compose($url: url($img-logo), $prop:'no-repeat center') {
  @return $url #{$prop};
}

///@mixin bg-img
//@param fallback-set true or false to use default fallback
//@param img output of @func bg-compose
@mixin bg-img($fallback-set, $img) {
  $fallback: bg-compose();
  @if $fallback-set {
    background: #{$img}, $fallback;
    background-size: cover;
  } @else {
    background: $img;
    background-size: cover;
  }
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}
